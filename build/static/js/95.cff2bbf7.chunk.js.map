{"version":3,"sources":["views/app-views/apps/setting/Setting.js","views/app-views/apps/setting/sysData.js","views/app-views/apps/setting/Data.js","views/app-views/apps/setting/index.js","components/layout-components/PageHeaderAlt.js"],"names":["Setting","systemData","settings","settingsLoading","useState","setting","setSetting","setsLoading","setSetsLoading","key","title","icon","BarcodeOutlined","desc","boolean","allow","ClusterOutlined","TagOutlined","ShoppingCartOutlined","option1","option2","options","checked","EuroOutlined","config","setConfig","allRecords","lastSetting","changes","docs","map","doc","data","_id","value","checkedItem","elm","onChange","e","message","loading","content","target","setTimeout","DataService","create","success","duration","radioStyle","display","height","lineHeight","itemLayout","dataSource","renderItem","item","Item","Flex","justifyContent","alignItems","className","Icon","type","Group","style","defaultChecked","LoadingOutlined","sysData","Data","Form","useForm","form","visible","setVisible","confirmLoading","setConfirmLoading","editingKey","setEditingKey","editingTitle","setEditingTitle","editingType","setEditingType","handleOk","a","validateFields","values","sysDatas","setFieldsValue","gutter","xs","sm","md","hoverable","onClick","record","displayType","suffix","thousandSeparator","parseInt","component","layout","onOk","onCancel","name","label","rules","required","min","parser","replace","addonAfter","formatter","placeholder","max","PageHeaderAlt","overlap","justify","lg","this","props","Component","connect","navType","theme","children","background","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle"],"mappings":"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","file":"static/js/95.cff2bbf7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { List, Switch, Radio, message } from 'antd';\r\nimport { \r\n\tBarcodeOutlined, \r\n\tTagOutlined, \r\n\tShoppingCartOutlined,\r\n\tClusterOutlined,\r\n\tLoadingOutlined,\r\n\tEuroOutlined\r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport { DataService } from \"services/settings.service\";\r\n\r\nconst Setting = ({systemData}) => {\r\n\tconst {settings, settingsLoading} = systemData;\r\n\tconst [setting, setSetting] = useState([]);\r\n  \tconst [setsLoading, setSetsLoading] = useState(true);\r\n\tconst [config, setConfig] = useState([\r\n\t\t{\r\n\t\t\tkey: 'product_code',\r\n\t\t\ttitle: 'Product Code',\r\n\t\t\ticon: BarcodeOutlined,\r\n\t\t\tdesc: 'Allow Each Product to have an extra text field for product code.',\r\n\t\t\tboolean: true,\r\n\t\t\tallow: false\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'category',\r\n\t\t\ttitle: 'Category',\r\n\t\t\ticon: ClusterOutlined,\r\n\t\t\tdesc: 'Allow Each Product to have a category and brand on product table.',\r\n\t\t\tboolean: true,\r\n\t\t\tallow: false\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'brand',\r\n\t\t\ttitle: 'Brand',\r\n\t\t\ticon: TagOutlined,\r\n\t\t\tdesc: 'Allow Each Product to have a category and brand on product table.',\r\n\t\t\tboolean: true,\r\n\t\t\tallow: false\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'purchases',\r\n\t\t\ttitle: 'Purchased Allocation',\r\n\t\t\ticon: ShoppingCartOutlined,\r\n\t\t\toption1: 'Purchase for a specific store then purchased products goes in stock of specified store.',\r\n\t\t\toption2: 'Purchase once for all stores then distribute purchased products to store one by one.',\r\n\t\t\toptions: true,\r\n\t\t\tchecked: null,\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'prices',\r\n\t\t\ttitle: 'Products Prices',\r\n\t\t\ticon: EuroOutlined,\r\n\t\t\toption1: 'Prices of Carton, packet or dozen varies according to Sale or purchase price of one piece',\r\n\t\t\toption2: 'Carton, packet or dozen have their own prices, independent to price of one piece. ',\r\n\t\t\toptions: true,\r\n\t\t\tchecked: null,\r\n\t\t}\t\t\t\r\n\t]);\r\n\t\r\n\tif(!settingsLoading){\r\n\t\tlet allRecords = [];\r\n\t \tlet lastSetting = '';\r\n\t\tlet changes = false;\r\n\t\tsettings.docs.map((doc) => {\r\n\t\tallRecords = {\r\n\t\t  ...allRecords,\r\n\t\t  [doc.data()._id] : {'value': doc.data().value},\r\n\t\t}\r\n\t\tlastSetting = doc.data()._id;\r\n\t\tchanges = !setting[lastSetting] || setting[lastSetting].value !== doc.data().value\r\n\t\t? true : changes; \r\n\t\treturn true;\r\n\t\t})\r\n\t\tif(changes || (lastSetting && (setsLoading || !setting[lastSetting]))){\r\n\t\t\tsetSetting(allRecords)\r\n\t\t\tsetSetsLoading(false);\r\n\t\t\tlet checkedItem = config.map( elm => {\r\n\t\t\t\tif(allRecords[elm.key]){\r\n\t\t\t\t\tif(elm.options){\r\n\t\t\t\t\t\telm.checked = allRecords[elm.key].value\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\telm.allow = allRecords[elm.key].value\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\treturn elm\r\n\t\t\t})\r\n\t\t\tsetConfig([\r\n\t\t\t\t...checkedItem\t\r\n\t\t\t])\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChange = (key,e) => {\r\n\t\tmessage.loading({ content: 'Saving...', key:'key' });\r\n\t\tlet value = e.target ? e.target.value : e;\r\n\t\tconst checkedItem = config.map( elm => {\r\n\t\t\tif(elm.key === key) {\r\n\t\t\t\tif(elm.options){\r\n\t\t\t\t\telm.checked = value\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\telm.allow = value\r\n\t\t\t\t}\t\t\t\t\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetConfig([\r\n\t\t\t...checkedItem\t\r\n\t\t])\r\n\t\tsetTimeout(() => {\r\n\t\t\tDataService.create({ value },key);\r\n\t\t\tmessage.success({ content: 'Changes Saved!', key:'key', duration: 2 });\r\n\t\t}, 1000);\r\n\t\t// let value = e.target ? e.target.value : e\r\n\t\t// console.log(setting);\r\n\t\t// console.log(key + ' ' + value);\r\n\t\t// let sysDatas = { value }\r\n      \t// DataService.create(sysDatas,key);\r\n\t\t// setTimeout(() => {\r\n\t\t// \tmessage.success({ content: 'Changes Saved!', key:'key', duration: 2 });\r\n\t\t// }, 1000);\r\n\r\n\t};\r\n\r\n\tconst radioStyle = {\r\n\t\tdisplay: 'block',\r\n\t\theight: '35px',\r\n\t\tlineHeight: '35px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List\r\n\t\t\titemLayout=\"horizontal\"\r\n\t\t\tdataSource={config}\r\n\t\t\trenderItem={item => (\r\n\t\t\t\t<List.Item>\r\n\t\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\" className=\"w-100\">\r\n\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t<Icon className=\"h1 mb-0 text-primary\" type={item.icon} />\r\n\t\t\t\t\t\t\t<div className=\"ml-3\">\r\n\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{item.title}</h4>\r\n\t\t\t\t\t\t\t\t{item.boolean ? (<p>{item.desc}</p>) : null}\r\n\t\t\t\t\t\t\t\t{item.options ? \r\n\t\t\t\t\t\t\t\t(<Radio.Group onChange={checked => {onChange(item.key,checked)}} \r\n\t\t\t\t\t\t\t\t\tvalue={item.checked} \r\n\t\t\t\t\t\t\t\t\tclassName=\"ml-1\">\r\n\t\t\t\t\t\t\t\t\t<Radio style={radioStyle} value={1}>\r\n\t\t\t\t\t\t\t\t\t\t{item.option1}\r\n\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t<Radio style={radioStyle} value={2}>\r\n\t\t\t\t\t\t\t\t\t\t{item.option2}\r\n\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t</Radio.Group>) \r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{item.boolean ? \r\n\t\t\t\t\t\t\t(<div className=\"ml-3\">\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked={item.allow} \r\n\t\t\t\t\t\t\t\tonChange={checked => {onChange(item.key,checked)}}  />\r\n\t\t\t\t\t\t\t{(!setsLoading && setting[item.key]) ? null : <LoadingOutlined/>}\r\n\t\t\t\t\t\t</div>) : null}\r\n\t\t\t\t\t</Flex>\r\n\t\t\t\t</List.Item>\r\n\t\t\t)}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default Setting\r\n","export const sysData = [\r\n\t{\r\n\t\tkey: \"cashOpeningBalance\",\r\n\t\ttitle: \"Cash Opening Balance\",\r\n\t\ttype: 1\r\n\t},\r\n\t{\r\n\t\tkey: \"momoOpeningBalance\",\r\n\t\ttitle: \"Momo Opening Balance\",\r\n\t\ttype: 1\r\n\t},\r\n\t{\r\n\t\tkey: \"reminderDuration\",\r\n\t\ttitle: \"Todays Notification Reminder\",\r\n\t\ttype: 2\r\n\t}\r\n]","import React, { useState } from 'react'\r\nimport { InputNumber, Form, Modal, message, Row, Col, Card } from 'antd';\r\nimport { DataService } from \"services/settings.service\";\r\nimport { sysData } from './sysData';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst Data = ({systemData}) => {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const [editingTitle, setEditingTitle] = useState('');\r\n  const [editingType, setEditingType] = useState('');\r\n  const {setting, setsLoading} = systemData;\r\n\r\n\r\n  const edit = record => {\r\n    setEditingKey(record.key);\r\n    setEditingType(record.type);\r\n    setEditingTitle(record.title);\r\n    form.setFieldsValue( (!setsLoading && setting[record.key]) ? \r\n                          {value:record.value}\r\n                          : {value:null}\r\n                        );\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = async e => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      let value = values.value;\r\n      if (value==='') return;\r\n      setConfirmLoading(true);\r\n      let sysDatas = { value }\r\n      DataService.create(sysDatas,editingKey)\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n      form.setFieldsValue({value:null});\r\n      message.success(`${editingTitle} set successfully`)\r\n    } catch (errInfo) {}\r\n    \r\n  }\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    setEditingKey('');\r\n    setEditingType('');\r\n    setEditingTitle('');\r\n    form.setFieldsValue({value:null});\r\n  }\r\n\r\n\treturn (\r\n\t\t<Row gutter={16}>\r\n      {sysData.map(elm => (\r\n        <Col xs={24} sm={24} md={8} key={elm.key}>\r\n          <Card \r\n            hoverable \r\n            onClick={() => {\r\n              edit(elm)\r\n            }}>\r\n            <div className=\"text-center\">\r\n              <h3>{(!setsLoading && setting[elm.key])? \r\n                    (\r\n                      elm.type === 1 ?\r\n                        (<NumberFormat displayType={'text'} \r\n                            value={setting[elm.key].value} suffix=\" Rwf\" \r\n                            thousandSeparator={true}/>) \r\n                        : parseInt(setting[elm.key].value) > 0 ? (`${setting[elm.key].value} Minute` + (setting[elm.key].value > 1 ? 's' : '')) : 'Disabled'\r\n                    )\r\n                      : '-'\r\n                  }\r\n              </h3>\r\n              <h5 className=\"mt-4\">{elm.title}</h5>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n      <Form form={form} component={false} layout=\"vertical\">\r\n        <Modal\r\n          title={editingTitle}\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          confirmLoading={confirmLoading}\r\n          onCancel={handleCancel}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col xs={24} sm={24} md={24}>\r\n            {editingType === 1 && (<Form.Item name=\"value\" label=\"Value\" rules={[\r\n                {\r\n                  required: true,\r\n                  message: `This field is required.`,\r\n                },\r\n              ]}>\r\n                <InputNumber\r\n                  className=\"w-100\"\r\n                  min={0}\r\n                  parser={data => data.replace(/\\$\\s?|(,*)/g, '')}\r\n                  addonAfter=\"Rwf\" \r\n                  formatter={data => `${data}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                />\r\n              </Form.Item>)}\r\n              {editingType === 2 && (<Form.Item name=\"value\" label=\"Value\" rules={[\r\n                {\r\n                  required: true,\r\n                  message: `This field is required.`,\r\n                },\r\n              ]}>\r\n                <InputNumber\r\n                  className=\"w-100\"\r\n                  placeholder=\"Enter Minutes\"\r\n                  min={0}\r\n                  max={100}\r\n                />\r\n              </Form.Item>)}\r\n            </Col>\r\n          </Row>\r\n        </Modal> \r\n      </Form>\r\n    </Row>\r\n\t)\r\n}\r\n\r\nexport default Data;","import React, { Component } from 'react'\r\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\r\nimport { Row, Col, Card } from 'antd';\r\nimport Settings from './Setting';\r\nimport Data from './Data';\r\n\r\nexport class Setting extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<PageHeaderAlt className=\"bg-primary\" overlap>\r\n\t\t\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t\t\t<div className=\"py-lg-4\">\r\n\t\t\t\t\t\t\t<h1 className=\"text-white display-4\">System Settings</h1>\r\n\t\t\t\t\t\t\t<Row type=\"flex\" justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={12}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-white w-75 text-center mt-2 mb-4 mx-auto\"></p>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</PageHeaderAlt>\r\n\t\t\t\t<div className=\"container mt-5\">\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={24}>\r\n\t\t\t\t\t\t\t<Data systemData={this.props.systemData}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Settings systemData={this.props.systemData}/>\r\n\t\t\t\t</Card>\r\n\t\t\t</>\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Setting\r\n","import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);"],"sourceRoot":""}